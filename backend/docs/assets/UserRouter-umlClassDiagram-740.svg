<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="206px" preserveAspectRatio="none" style="width:303px;height:206px;background:#00000000;" version="1.1" viewBox="0 0 303 206" width="303px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="261" x="5" y="19">Dot Executable: /opt/local/bin/dot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="145" x="5" y="35.2969">File does not exist</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="291" x="5" y="51.5938">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="67.8906"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="79" x="5" y="84.1875">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="57" x="5" y="100.4844">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="72" x="5" y="116.7813">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="133.0781"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="17" x="10" y="149.375">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="165.6719"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="227" x="5" y="181.9688">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="0" x="10" y="198.2656"/><!--MD5=[78ecfb9c19c676cc1e137d147302234d]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "UserRouter<Type>" {
    +methods : string[]
    +opts : RouterOptions
    +params : object
    +stack : Layer[]
    +all<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +all<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +allowedMethods(options: RouterAllowedMethodsOptions) : Middleware<DefaultState, DefaultContext>
    +build(cb: Function) : Middleware<DefaultState, DefaultContext>
    +del<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +del<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +delete<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +delete<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +get<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +get<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +head<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +head<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +link<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +link<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +match(path: string, method: string) : RoutesMatch
    +middleware() : Middleware<DefaultState, DefaultContext>
    +options<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +options<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +param(param: string, middleware: ParamMiddleware) : Router<DefaultState, DefaultContext>
    +patch<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +patch<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +post<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +post<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +prefix(prefix: string) : Router<DefaultState, DefaultContext>
    +put<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +put<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +redirect(source: string, destination: string, code: number) : Router<DefaultState, DefaultContext>
    +register(path: string | RegExp, methods: string[], middleware: Middleware<DefaultState, DefaultContext> | Middleware<DefaultState, DefaultContext>[], opts: LayerOptions) : Layer
    +route(name: string) : boolean | Layer
    +routes() : Middleware<DefaultState, DefaultContext>
    +unlink<T, U>(name: string, path: string | RegExp, middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +unlink<T, U>(path: string | RegExp | (string | RegExp)[], middleware: Middleware<DefaultState & T, DefaultContext & U>[]) : Router<DefaultState, DefaultContext>
    +url(name: string, params: any, options: UrlOptionsQuery) : string | Error
    {static} +url(path: string | RegExp, params: object) : string
    +use(middleware: Middleware<DefaultState, DefaultContext>[]) : Router<DefaultState, DefaultContext>
    +use(path: string | RegExp | string[], middleware: Middleware<DefaultState, DefaultContext>[]) : Router<DefaultState, DefaultContext>
    -getCount(ctx: ParameterizedContext<DefaultState, DefaultContext, unknown>, fetchType: FetchType) : Promise<void>
    -getList(ctx: ParameterizedContext<DefaultState, DefaultContext, unknown>, fetch: FetchType) : Promise<void>
}
class "Router"
hide "Router" circle
"Router" <|- - "UserRouter<Type>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 11:46:50 EST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>